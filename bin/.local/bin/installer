#!/usr/bin/env bash

#=== HELPER METHODS ===================================[[[

function _err() { echo -e "\e[38;5;82m[ERROR]\e[39m:\e[38;5;198m $1" && exit 1; }
function _log() { echo -e " \e[32m[INFO]\e[39m: $1"; }

PROGRAM_SRC=$1; SRC_URL=$2; PROGRAM_TARBALL=$(basename "$2"); MAKE_OPTS=$3

_log "installing $PROGRAM_SRC from $SRC_URL"

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
WORK_DIR=$(mktemp -d)

if [[ ! $WORK_DIR || ! -d $WORK_DIR ]]; then
	_err "failed creating temp build directory"
fi

function cleanup {
	sudo rm -rf "$WORK_DIR"
	_log "cleaned up tmp build directory"
}

trap cleanup EXIT # cleanup build artifacts on EXIT signals

if command -v curl &>/dev/null; then DL_CMD="curl -Lk --output $PROGRAM_TARBALL"
elif command -v wget &>/dev/null; then DL_CMD="wget --output-document $PROGRAM_TARBALL:"
else _err "unable to find cURL or wget"
fi

pushd "$WORK_DIR"
if eval "$DL_CMD $SRC_URL"; then
  _log "downloaded $PROGRAM_TARBALL tarball"
	mkdir "$PROGRAM_SRC"
	if tar -xvf "$PROGRAM_TARBALL" -C "$PROGRAM_SRC" --strip-components 1; then
		_log "unpacked $PROGRAM_SRC tarball"
	fi
fi

pushd "$PROGRAM_SRC"

if [[ ! -e 'Makefile' ]]; then

	_log "configuring $PROGRAM_SRC"
	if autoconf; then _log "autoconf successful"
	elif autoreconf -iv; then _log "autoreconf successful"
	elif sh autogen.sh; then _log "autogen.sh successful"
	elif mkdir build && pushd build && cmake . && popd; then _log "cmake successful"
	else _log "failed $PROGRAM_SRC configuration"
	fi

	if [[ -f configure.ac ]]; then
		_log "found configure.ac, running automake"
		automake && _log "automake successful" fi
	fi

	if ./configure $MAKE_OPTS; then _log "configured install"
	elif ./Configure; then _log "configured install"
	else _log "failed to configure $PROGRAM_SRC"
	fi
fi

sudo make --jobs 8 install \
  && _log "$PROGRAM_SRC installed" \
  && exit 0 \
  || _err "failed to install $PROGRAM_SRC" \
  && exit 1
