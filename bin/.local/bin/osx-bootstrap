#!/usr/bin/env zsh
#
# Close open System Preferences panes preventing overriding changed settings
#
error() { print -P "%F{160}[ERROR] %f%b $1" >&2 && exit 1; }
user_input() { print -P "%F{20} %f%b $1" >&2 && exit 1; }
info() { print -P "%F{34}[INFO] %f%b $1"; }
osascript -e 'tell application "System Preferences" to quit' # Ask for the administrator password upfront
sudo -v
while true; do # Keep-alive: update existing `sudo` time stamp until finished
  sudo -n true && sleep 60 && kill -0 "$$" || exit 1
done 2>/dev/null &
#== GENERAL UI/UX                                                               #
info "Updating general system settings"
sudo nvram SystemAudioVolume=" "                                                       # Disable the sound effects on boot

nsg_global_domain_opt(){ defaults write NSGlobalDomain $@; }
info "updating nsg global domain settings"
nsg_global_domain_opt AppleKeyboardUIMode -int 3                            # Enable full keyboard access for all controls
nsg_global_domain_opt AppleLanguages -array "en" # Set language and text formats
nsg_global_domain_opt AppleLocale -string "en_US@currency=USD"
nsg_global_domain_opt AppleMeasurementUnits -string "Inches"
nsg_global_domain_opt AppleMetricUnits -bool false
nsg_global_domain_opt ApplePressAndHoldEnabled -bool false            # Disable press-and-hold for keys in favor of key repeat
nsg_global_domain_opt InitialKeyRepeat -int 10
nsg_global_domain_opt KeyRepeat -int 1                                # Set a blazingly fast keyboard repeat rate
nsg_global_domain_opt com.apple.mouse.tapBehavior -int 1
nsg_global_domain_opt com.apple.swipescrolldirection -bool false            # Disable “natural” (Lion-style) scrolling
nsg_global_domain_opt AppleHighlightColor -string "0.764700 0.976500 0.568600" # Set highlight color to green
nsg_global_domain_opt AppleShowScrollBars -string "Always"                     # Always show scrollbars
nsg_global_domain_opt NSAutomaticCapitalizationEnabled -bool false            # Disable automatic capitalization as it’s annoying when typing code
nsg_global_domain_opt NSAutomaticDashSubstitutionEnabled -bool false          # Disable smart dashes as they’re annoying when typing code
nsg_global_domain_opt NSAutomaticPeriodSubstitutionEnabled -bool false        # Disable automatic period substitution as it’s annoying when typing code
nsg_global_domain_opt NSAutomaticQuoteSubstitutionEnabled -bool false         # Disable smart quotes as they’re annoying when typing code
nsg_global_domain_opt NSAutomaticSpellingCorrectionEnabled -bool false        # Disable auto-correct
nsg_global_domain_opt NSDisableAutomaticTermination -bool false               # Disable automatic termination of inactive apps
nsg_global_domain_opt NSDocumentSaveNewDocumentsToCloud -bool false           # Save to disk (not to iCloud) by default
nsg_global_domain_opt NSNavPanelExpandedStateForSaveMode -bool true            # Expand save panel by default
nsg_global_domain_opt NSNavPanelExpandedStateForSaveMode2 -bool true
nsg_global_domain_opt NSScrollAnimationEnabled -bool false                     # Disable smooth scrolling
nsg_global_domain_opt NSTableViewDefaultSizeMode -int 2                        # Set sidebar icon size to medium
nsg_global_domain_opt NSTextShowsControlCharacters -bool true                 # Display ASCII control characters using caret notation in standard text views
nsg_global_domain_opt NSToolbarTitleViewRolloverDelay -float 0                 # Adjust toolbar title rollover delay
nsg_global_domain_opt NSUseAnimatedFocusRing -bool false                       # Disable the over-the-top focus ring animation
nsg_global_domain_opt NSWindowResizeTime -float 0.001                          # Increase window resize speed for Cocoa applications
nsg_global_domain_opt PMPrintingExpandedStateForPrint -bool true # Expand print panel by default
nsg_global_domain_opt PMPrintingExpandedStateForPrint2 -bool true

defaults write com.apple.CrashReporter DialogType -string "none"                      # Disable the crash reporter
defaults write com.apple.helpviewer DevMode -bool true                                # Set Help Viewer windows to non-floating mode
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true          # Automatically quit printer app once the print jobs complete
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName # Reveal IP address, hostname, OS version, etc. in login window
# disable the “are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool true
# remove duplicates in the “open with” menu (also see `lscleanup` alias)
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
#== TRACKPAD, MOUSE, KEYBOARD, BLUETOOTH ACCESSORIES, AND INPUT                 #
info "updating trackpad, mouse, keyboard, and bluetooth settings"
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3                            # Enable full keyboard access for all controls
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false            # Disable “natural” (Lion-style) scrolling
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40 # Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true # Trackpad: enable tap to click for this user and for the login screen
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2 # Trackpad: map bottom right corner to right-click
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true      # Use scroll gesture with the Ctrl (^) modifier key to zoom
defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true # Follow the keyboard focus while zoomed in



#== SCREEN                                                                      #
info "updating screensaver & screensaver settings"
defaults write com.apple.screensaver askForPassword -int 1 # Require password immediately after sleep or screen saver begins
defaults write com.apple.screensaver askForPasswordDelay -int 0
defaults write com.apple.screencapture location -string "$HOME/Desktop"                             # Save screenshots to the desktop
defaults write com.apple.screencapture type -string "png"                                           # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture disable-shadow -bool true                                    # Disable shadow in screenshots
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true # Enable subpixel font rendering on non-Apple LCDs
#== FINDER                                                                      #
info "updating finder settings"
defaults write com.apple.finder QuitMenuItem -bool true         # Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
defaults write com.apple.finder DisableAllAnimations -bool true # Finder: disable window animations and Get Info animations
defaults write com.apple.finder NewWindowTarget -string "PfDe"  # Set Desktop as the default location for new Finder windows
defaults write com.apple.finder NewWindowTargetPath -string "file://$HOME"
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true # Show icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
defaults write com.apple.finder AppleShowAllFiles -bool true                 # Finder: show hidden files by default
defaults write NSGlobalDomain AppleShowAllExtensions -bool true              # Finder: show all filename extensions
defaults write com.apple.finder ShowStatusBar -bool true                     # Finder: show status bar
defaults write com.apple.finder ShowPathbar -bool true                       # Finder: show path bar
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true           # Display full POSIX path as Finder window title
defaults write com.apple.finder _FXSortFoldersFirst -bool true               # Keep folders on top when sorting by name
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"          # When performing a search, search the current folder by default
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false   # Disable the warning when changing a file extension
defaults write NSGlobalDomain com.apple.springing.enabled -bool true         # Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0             # Remove the spring loading delay for directories
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true # Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
defaults write com.apple.frameworks.diskimages skip-verify -bool true # Disable disk image verification
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true # Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"            # Use list view in all Finder windows by default
defaults write com.apple.finder WarnOnEmptyTrash -bool false                   # Disable the warning before emptying the Trash
sudo chflags nohidden /Volumes                                                 # Show the /Volumes folder
file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns # Remove Dropbox’s green checkmark icons in Finder
# show item info near icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
# show item info to the right of the icons on the desktop
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist
# enable snap-to-grid for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# increase grid spacing for icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
# increase the size of icons on the desktop and in other icon views
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
[ -e "$file" ] && mv -f "$file" "$file.bak"
# expand the following file info panes
defaults write com.apple.finder FXInfoPanesExpanded -dict General -bool true OpenWith -bool true Privileges -bool true
# DOCK, DASHBOARD, AND HOT CORNERS
defaults write com.apple.dashboard mcx-disabled -bool true # Disable Dashboard
dock_opt(){ defaults write com.apple.dock $@; }
info "updating dock, dashboard, and hot corner settings"
dock_opt autohide -bool true # Automatically hide and show the Dock
dock_opt autohide-delay -float 0 # Remove the auto-hiding Dock delay
dock_opt autohide-time-modifier -float 0 # Remove the animation when hiding/showing the Dock
dock_opt dashboard-in-overlay -bool true # Don’t show Dashboard as a Space
dock_opt enable-spring-load-actions-on-all-items -bool false # Enable spring loading
dock_opt expose-animation-duration -float 0.1 # Speed up Mission Control animations
dock_opt expose-group-by-app -bool false # Don’t group windows by application in Mission Control
dock_opt launchanim -bool false # Don’t animate opening applications from the Dock
dock_opt mineffect -string "scale" # Change minimize/maximize window effect
dock_opt minimize-to-application -bool true # Minimize windows into their application’s icon
dock_opt mouse-over-hilite-stack -bool true # Enable highlight hover Dock
dock_opt mru-spaces -bool false # Don’t automatically rearrange Spaces based on most recent use
dock_opt show-process-indicators -bool true # Show indicator lights for open applications
dock_opt show-recents -bool false # Don’t show recent applications in Dock
dock_opt showhidden -bool true # Make Dock icons of hidden applications translucent
dock_opt tilesize -int 72 # Set the icon size of Dock items to 36 pixels
dock_opt wvous-bl-corner -int 2 # Bottom left
dock_opt wvous-bl-modifier -int 0
dock_opt wvous-tl-corner -int 2 # All corners → Mission Control
dock_opt wvous-tl-modifier -int 0
dock_opt wvous-tr-corner -int 2 # Top right screen corner
dock_opt wvous-tr-modifier -int 0
find "$HOME/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete  # Reset Launchpad, but keep the desktop wallpaper intact
# SAFARI & WEBKIT
safari_opt(){ defaults write com.apple.Safari $@; }
info "updating safari and webkit settings"
safari_opt FindOnPageMatchesWordStartsOnly -bool false     # Make Safari’s search banners default to Contains instead of Starts With
safari_opt IncludeDevelopMenu -bool true                   # Enable the Develop menu and the Web Inspector in Safari
safari_opt IncludeInternalDebugMenu -bool true             # Enable Safari’s debug menu
safari_opt InstallExtensionUpdatesAutomatically -bool true # Update extensions automatically
safari_opt ProxiesInBookmarksBar "()"                      # Remove useless icons from Safari’s bookmarks bar
safari_opt SendDoNotTrackHTTPHeader -bool true             # Enable “Do Not Track”
safari_opt ShowFullURLInSmartSearchField -bool true        # Show the full URL in the address bar (note: this still hides the scheme)
safari_opt SuppressSearchSuggestions -bool true
safari_opt UniversalSearchEnabled -bool false                # Privacy: don’t send search queries to Apple
safari_opt WebAutomaticSpellingCorrectionEnabled -bool false # Disable auto-correct
safari_opt WebContinuousSpellCheckingEnabled -bool true      # Enable continuous spellchecking
safari_opt WebKitDeveloperExtrasEnabledPreferenceKey -bool true
safari_opt WebKitJavaScriptCanOpenWindowsAutomatically -bool false                                     # Block pop-up windows
safari_opt WebKitTabToLinksPreferenceKey -bool true                                                    # Press Tab to highlight each item on a web page
safari_opt com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true # Prevent Safari from opening ‘safe’ files automatically after downloading
safari_opt com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
safari_opt com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false
safari_opt com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true                  # Add a context menu item for showing the Web Inspector in web views
# MAIL                                                                        #
mail_opt(){ defaults write com.apple.mail $@; }
info "updating mail settings"
mail_opt AddressesIncludeNameOnPasteboard -bool false # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
mail_opt DisableInlineAttachmentViewing -bool true    # Disable inline attachments (just show the icons)
mail_opt DisableReplyAnimations -bool true            # Disable send and reply animations in Mail.app
mail_opt DisableSendAnimations -bool true
mail_opt DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes" # Display emails in threaded mode, sorted by date (oldest at the top)
mail_opt DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"
mail_opt DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
mail_opt NSUserKeyEquivalents -dict-add "Send" "@\U21a9"        # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
mail_opt SpellCheckingBehavior -string "NoSpellCheckingEnabled" # Disable automatic spell checking
# TERMINAL
term_opt(){ defaults write com.apple.Terminal $@; }
info "updating terminal settings"
term_opt FocusFollowsMouse -bool true   # Enable “focus follows mouse” for Terminal.app and all X11 apps
term_opt SecureKeyboardEntry -bool true # Enable Secure Keyboard Entry in Terminal.app
term_opt ShowLineMarks -int 0           # Disable the annoying line marks
term_opt StringEncodings -array 4       # Only use UTF-8 in Terminal.app
defaults write org.x.X11 wm_ffm -bool true
# ACTIVITY MONITOR
activity_monitor_opt(){ defaults write com.apple.ActivityMonitor $@; }
info "updating activity monitor settings"
activity_monitor_opt IconType -int 5               # Visualize CPU usage in the Activity Monitor Dock icon
activity_monitor_opt OpenMainWindow -bool true     # Show the main window when launching Activity Monitor
activity_monitor_opt ShowCategory -int 0           # Sort Activity Monitor results by CPU usage
activity_monitor_opt SortColumn -string "CPUUsage" # Show all processes in Activity Monitor
activity_monitor_opt SortDirection -int 0
# ADDRESS BOOK, DASHBOARD, ICAL, TEXTEDIT, AND DISK UTILITY
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true # Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility advanced-image-options -bool true
defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool false # Disable auto-play videos when opened with QuickTime Player
defaults write com.apple.TextEdit PlainTextEncoding -int 4              # Open and save files as UTF-8 in TextEdit
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
defaults write com.apple.TextEdit RichText -int 0     # Use plain text mode for new TextEdit documents
defaults write com.apple.dashboard devmode -bool true # Enable Dashboard dev mode (allows keeping widgets on the desktop)
# KILL AFFECTED APPLICATIONS                                                  #
for application in \
  "Activity Monitor" \
  "Address Book" \
  "Calendar" \
  "Contacts" \
  "Dock" \
  "Finder" \
  "Mail" \
  "Messages" \
  "Photos" \
  "Safari" \
  "SystemUIServer" \
  "Terminal" \
  "Vivaldi" \
  "cfprefsd"; do
  killall "$application" &>/dev/null
done
info "successfully applied configuration options"
user_input "Reboot $HOSTNAME?[y/N]: " # Prompt user to reboot
read -r REBOOT
if [[ $REBOOT == "y" ]]; then
  info "rebooting in 5 seconds..."
  sleep 5
  sudo reboot
fi
info "skipping reboot"
exit 0

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
