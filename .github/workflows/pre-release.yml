name: "Arch Linux: release"

on:
  push:
    branches: [ arch-linux ]

jobs:

  linting:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Run shfmt linter
        run: |
          docker run --volume "$PWD":/mnt \
                     --rm \
                     mvdan/shfmt -bn -ci -i 4 -ln=bash -s -sr -w /mnt

      - name: Commit shfmt fixes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: (linting) apply shfmt fixes
          commit_options: "--cleanup=default --no-verify --signoff"
          skip_dirty_check: false
          
  build:
    name: Test
    needs: linting
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Update system
      run: |
            pacman -Syyu --noconfirm
            pacman --needed --noconfirm --sync base-devel git

    - name: Create a non-root user
      run: |
            useradd -m test_user && \
            passwd -d test_user && \
            printf 'test_user ALL=(ALL) ALL\n' | tee -a /etc/sudoers

    - name: Install yay
      run: |
            su - test_user bash -c 'git clone https://aur.archlinux.org/yay.git /tmp/yay && \
            cd /tmp/yay && \
            makepkg -si --noconfirm'
    - name: Install dependencies
      run: |
            su - test_user bash -c 'yay -S --noconfirm neovim \
                                                       stow \
                                                       tmux \
                                                       zsh'
    - name: Install dotfiles
      run: |
            make dotfiles

  pre-release:
    name: Pre-Release
    needs: build
    runs-on: "ubuntu-latest"
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --unshallow
    
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.6.6'
          includePrerelease: false

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Publish new release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ steps.gitversion.outputs.majorMinorPatch }}"
          prerelease: false
          title: "Arch Linux: v${{ steps.gitversion.outputs.majorMinorPatch }}"

