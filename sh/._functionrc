#! /bin/bash

function darwin() {
  ## alias ##
  alias cleanupds="find . -type f -name '*.DS_Store' -ls -delete" # remove .DS_Store cruft 
  
  ## env variables ##
  [[ -d /usr/local/opt/coreutils/libexec/gnubin ]] && export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
  [[ -d /usr/local/opt/binutils ]] && export PATH="/usr/local/opt/binutils/bin:$PATH"
}

function docker-nuke(){ # blows away docker containers, volumes and images
  if (( $(docker ps -q | wc -l) > 0 )); then
     docker kill $(docker ps -q)
  elif (( $(docker ps -a -q | wc -l) > 0 )); then
     docker rm $(docker ps -a -q) --force --volumes
  elif (( $(docker images -q | wc -l) > 0 )); then
     docker rmi $(docker images -q) --force
  elif (( $(docker volume ls -q | wc -l) > 0 )); then
     docker volume rm $(docker volume ls -q) --force
  else
    echo "no images or containers found"
  fi
}

function linux() {
  return
}

function parse_git_branch() { # get current repo branch
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [[ ! "${BRANCH}" == "" ]]; then
	  STAT=`parse_git_dirty`
	  echo "[${BRANCH}${STAT}]"
	else
	  echo ""
	fi
}

function parse_git_dirty { # get status of repo
  status=`git status 2>&1 | tee`
  dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
  untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
  ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
  newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
  renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
  deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
  bits=''
  [[ "${renamed}" == "0" ]] && bits=" >${bits}"
  [[ "${ahead}" == "0" ]] && bits=" *${bits}"
  [[ "${newfile}" == "0" ]] && bits=" +${bits}"
  [[ "${untracked}" == "0" ]] && bits=" ?${bits}"
  [[ "${deleted}" == "0" ]] && bits=" x${bits}"
  [[ "${dirty}" == "0" ]] && bits=" !${bits}"
  echo " ${bits}"
}

function ssh(){ # resolve ssh terminfo issues 
  if [[ $TERM =~ "kitty" ]]; then
    kitty +kitten ssh $@
  else
    ssh $@
  fi
}
