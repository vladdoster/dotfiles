#autoload
# vim: set et:ft=zsh:sw=2:st=2:ts=2:tw=100:

local flag_help
local -a arg_extension=()

local -a usage=(
    "mkfile [-h|--help]"
    "mkfile [-e|--extension=<extension>] [<filenames...>]"
)

# -D pulls parsed flags out of $@
# -E allows flags/args and positionals to be mixed, which we don't want in this example
# -F says fail if we find a flag that wasn't defined
# -M allows us to map option aliases (ie: h=flag_help -help=h)
# -K allows us to set default values without zparseopts overwriting them
# Remember that the first dash is automatically handled, so long options are -opt, not --opt

zmodload zsh/zutil
zparseopts -D -F -K -- \
    {e,-extension}:=arg_extension \
    {h,-help}=flag_help \
    || return 1

[[ -z "$flag_help" ]] || { print -l $usage; return 0 }

local f fname ext="$arg_extension[-1]"
for f in $@; do
    fname="${f}.${arg_extension[-1]}"
    command cat <<- EOF >! $fname
#!/usr/bin/env ${ext}
#
# $fname
#



# vim: set expandtab filetype=${ext} shiftwidth=4 softtabstop=4 tabstop=4:
EOF
    command chmod +x "${fname}"
    builtin print -P -- "%F{green}==>%f $fname created"
done
