#autoload

emulate -L zsh
setopt extended_glob pushd_silent

zmodload zsh/zutil || return 1

opt_help= opt_edit=
cli_usage=("Usage: $0 [-h|--help] [-e|--edit] [function]")

zparseopts -D -F -K -- \
  {e,-edit}=opt_edit \
  {h,-help}=opt_help \
  || return 1
[[ -z "$opt_help" ]] || {
  builtin print -l $cli_usage && return
}

(( $#@ )) && {
  pushd -- ~/.config/zsh/functions && {
    command touch $1
    command chmod 755 $1
    cat << EOF > $1
#autoload
#
# ${1}
#
$(builtin print -- '')
__${1}_usage () {
    print -- 'Usage: ${1} [options] [arguments...]'
    print -- 'Options:'
    print -- '  -d, --debug        turn on execution tracing'
    print -- '  -h, --help         show list of command-line options'
}
$(builtin print -- '')
setopt localoptions extended_glob
zmodload zsh/zutil || return 1
$(builtin print -- '')
local base debug dryrun help
builtin zparseopts -D -E -F -K \\
    d=debug -debug=debug \\
    h=help  -help=help   \\
    || return 1
$(builtin print -- '')
if (( \$#help )) {
  __${1}_usage
  return 0
}
if (( \$#debug )) {
  setopt xtrace
}
$(builtin print -- '')
local -a arguments=(\${(q+)^@})
$(builtin print -- '')
print -l -- "\${#arguments} args" \${(@)arguments}
$(builtin print -- '')
# vim: set expandtab filetype=zsh shiftwidth=2 softtabstop=2 tabstop=2:
EOF
    [[ -z "$opt_edit" ]] || {
      nvim $1
    }
    builtin print -- "==> Created $1 function"
  } always {
    popd
  }
} || {
  builtin print -P -- "%F{red}Error%f: $0 requires a function name"
  return 1
}

return 0

# vim: set expandtab filetype=zsh shiftwidth=2 softtabstop=2 tabstop=2:
emulate -L zsh
setopt extended_glob pushd_silent
zmodload zsh/zutil || return 1
opt_help= opt_edit=
cli_usage=("Usage: $0 [-h|--help] [-e|--edit] [function]")
zparseopts -D -F -K -- {e,-edit}=opt_edit {h,-help}=opt_help || return 1
[[ -z "$opt_help" ]] || {
  builtin print -l $cli_usage && return
}
(( $#@ )) && {
  pushd -- ~/.config/zsh/functions && {
    command touch $1
    command chmod 755 $1
    cat <<EOF > $1
#autoload
#
# ${1}
#
$(builtin print -- '')
__${1}_usage () {
  print -- 'Usage: ${1} [options] [arguments...]'
  print -- 'Options:'
  print -- '  -d, --debug        turn on execution tracing'
  print -- '  -h, --help         show list of command-line options'
}
$(builtin print -- '')
setopt localoptions extended_glob
zmodload zsh/zutil || return 1
$(builtin print -- '')
local base debug dryrun help
builtin zparseopts -D -E -F -K \\
  d=debug -debug=debug \\
  h=help  -help=help   \\
  || return 1
$(builtin print -- '')
if (( \$#help )) {
__${1}_usage
return 0
}
if (( \$#debug )) {
setopt xtrace
}
$(builtin print -- '')
local -a arguments=(\\${@})
$(builtin print -- '')
print -l -- "\${#arguments} args" \${(@)arguments}
$(builtin print -- '')
# vim: set expandtab filetype=zsh shiftwidth=2 softtabstop=2 tabstop=2:
EOF
    [[ -z "$opt_edit" ]] || {
      nvim $1
    }
    builtin print -- "==> Created $1 function"
  } always {
    popd
  }
} || {
  builtin print -P -- "%F{red}Error%f: $0 requires a function name"
  return 1
}
return 0
