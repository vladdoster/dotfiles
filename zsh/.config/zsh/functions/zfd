#autoload

local flag_help flag_verbose
local -a arg_extension=()

local -a usage=(
  "zfd [-h|--help]"
  "zfd [<function>]"
)

# -D pulls parsed flags out of $@
# -E allows flags/args and positionals to be mixed, which we don't want in this example
# -F says fail if we find a flag that wasn't defined
# -M allows us to map option aliases (ie: h=flag_help -help=h)
# -K allows us to set default values without zparseopts overwriting them
# Remember that the first dash is automatically handled, so long options are -opt, not --opt

zmodload zsh/zutil
zparseopts -D -F -K -- \
  {h,-help}=flag_help  ||
return 1

[[ -z "$flag_help" ]] || { print -l $usage && return }
if (( $#@ )); then
  nvim $1
  return 0
else
  cd $HOME/.config/zsh/functions
  return 0
fi
