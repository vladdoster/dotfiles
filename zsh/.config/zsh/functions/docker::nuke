#autoload

builtin emulate -L zsh -o EXTENDED_GLOB

# Remove all Docker related resources
#

local RUNNER=
local RUN_AS_SUDO
zmodload zsh/zutil
zparseopts -D -F -K -- {s,-run-as-sudo}=RUN_AS_SUDO || return 1
if [[ $# -gt 0 ]]
then
  echo Unexpected arguments, aborting...
  return 1
fi
if (( $#RUN_AS_SUDO ))
then
  RUNNER=sudo
fi

n=0
until [ ${n} -eq 4 ]; do
  if docker system info &>/dev/null; then
    NUM_CONTAINERS=$(docker container ls --all --quiet | wc -l)
    log::info "Found $(docker container ls --all --quiet | wc -l | xargs) containers"
    {
      log::info "Stopping running containers"
      docker container stop $(docker container ls --quiet);

      log::info "Removing containers..."
      for id in $(${RUNNER} docker container ls -aq); ${RUNNER} docker container rm --force ${id}

      log::info "Removing images..."
      for id in $(${RUNNER} docker image ls -aq); ${RUNNER} docker image rm --force ${id}

      log::info "Removing volumes..."
      for id in $(${RUNNER} docker volume ls --quiet); ${RUNNER} docker volume rm --force ${id}

      log::info "Removing networks..."
      for id in $(${RUNNER} docker network ls --quiet); ${RUNNER} docker network rm ${id}

      log::info "Pruning the system..."
      ${RUNNER} docker system prune --all --force
    } 2>/dev/null

    log::info "Successfully nuked docker"
    break

  else
    ((n++))

    if [[ $n -eq 4 ]]; then
      log::error "Docker daemon not running, aborting"
    else
      log::info "Docker daemon unavailable, retrying $n/3 times"
      sleep 5
    fi

  fi
done
